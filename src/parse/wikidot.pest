//
// parse/wikidot.pest
//
// ftml - Convert Wikidot code to HTML
// Copyright (C) 2019 Ammon Smith for Project Foundation
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.
//

// Pages {{{
page = { SOI ~ line* ~ EOI }
// }}}

// TODO
// Lines {{{
line = { line_inner ~ ("\n" | EOI) | just_newlines }
lines_internal = { space? ~ line* ~ line_inner? ~ ("\n" | EOI)? }

line_inner = {
    align |
    code |
    html |
    iframe |
    javascript |
    clear_float |
    collapsible |
    div |
    bullet_list |
    numbered_list |
    horizontal_line |
    quote_block |
    words
}

just_newlines = { "\n"+ }
// }}}

// Block lines {{{
align = {
    ("[[>]]\n" ~ line* ~ "[[/>]]") |
    ("[[<]]\n" ~ line* ~ "[[/<]]") |
    ("[[=]]\n" ~ line* ~ "[[/=]]") |
    ("[[==]]\n" ~ line* ~ "[[/==]]")
}

code = {
    "[[" ~ space? ~ ^"code" ~ code_arg? ~ space_any? ~ "]]\n" ~
    (!("[[/" ~ space? ~ ^"code") ~ ANY)* ~
    "[[/" ~ space? ~ ^"code" ~ space_any? ~ "]]"
}
code_arg = { space_any ~ (^"type" | ^"language" | ^"lang") ~ space_any? ~ "=" ~ space_any? ~ string }

collapsible = {
    "[[" ~ space? ~ ^"collapsible" ~ collapsible_arg* ~ space_any? ~ "]]\n" ~
    line* ~
    "[[/" ~ space? ~ ^"collapsible" ~ space_any? ~ "]]"
}
collapsible_arg = {
    space_any ~ (
        ^"hidelocation" | ^"show" | ^"hide" | ^"id" | ^"class" | ^"style"
    ) ~ space_any? ~ "=" ~ space_any? ~ string
}

div = {
    "[[" ~ space? ~ ^"div" ~ "_"? ~ div_arg* ~ space_any? ~ "]]\n" ~
    line* ~
    "[[/" ~ space? ~ ^"div" ~ "_"? ~ space_any? ~ "]]"
}
div_arg = { space_any ~ (^"id" | ^"class" | ^"style") ~ space_any? ~ "=" ~ space_any? ~ string }

html = {
    "[[" ~ space? ~ ^"html" ~ "_"? ~ space_any? ~ "]]\n" ~
    (!("[[/" ~ space? ~ ^"html") ~ ANY)* ~
    "[[/" ~ space? ~ ^"html" ~ space_any? ~ "]]"
}

iframe = {
    "[[" ~ space? ~ ^"iframe" ~ "_"? ~ space_any ~ url ~ iframe_arg* ~ space_any? ~ "]]"
}
iframe_arg = { space_any ~ ident ~ space_any? ~ "=" ~ space_any? ~ string }

javascript = {
    "[[" ~ space? ~ (^"js" | ^"javascript") ~ space_any? ~ "]]\n" ~
    (!("[[/" ~ space? ~ (^"js" | ^"javascript")) ~ ANY)* ~
    "[[/" ~ space? ~ (^"js" | ^"javascript") ~ space_any? ~ "]]"
}

quote_block = {
    "[[" ~ space? ~ (^"quote" | ^"blockquote") ~ quote_block_arg* ~ space_any? ~ "]]\n" ~
    lines_internal ~
    "[[/" ~ space? ~ (^"quote" | ^"blockquote") ~ space_any? ~ "]]"
}
quote_block_arg = { space_any ~ (^"id" | ^"class" | ^"style") ~ space_any? ~ "=" ~ space_any? ~ string }
// }}}

// Misc lines {{{
bullet_list = { (" "* ~ "* " ~ list_item)+ }
numbered_list = { (" "* ~ "# " ~ list_item)+ }
list_item = { word+ }
words = {
    (
        "+"{1,6} ~ (" " | "\t") |
        (!"+" ~ "="?)
    ) ~ word+
}
clear_float = { "~"{4,} ~ ("<" | ">")? }
horizontal_line = { "-"{4,} }
// }}}

// Words {{{
word = {
    text |
    raw |
    legacy_raw |
    email |
    em_dash |
    color |
    italics |
    strikethrough |
    bold |
    underline |
    subscript |
    superscript |
    monospace |
    anchor |
    anchor_tag |
    date |
    equation_ref |
    file_ref |
    footnote |
    footnote_block |
    form |
    gallery |
    module |
    note |
    image |
    size |
    span |
    tab_list |
    user |
    link_bare |
    link_page |
    link_url
}
// }}}

// Formatting words {{{
em_dash = { "---" | "--" }
color = { "##" ~ space? ~ ("#"? ~ ident) ~ space? ~ "|" ~ word* ~ "##" }
italics = { "//" ~ word* ~ "//" }
strikethrough = { "--" ~ !("-" | " ") ~ word+ ~ "--" }
bold = { "**" ~ word* ~ "**" }
underline = { "__" ~ word* ~ "__" }
subscript = { ",," ~ word* ~ ",," }
superscript = { "^^" ~ word* ~ "^^" }
monospace = { "{{" ~ word* ~ "}}" }
// }}}

// Block words {{{
anchor = { "[[#" ~ space? ~ ident ~ space? ~ "]]" }

date = {
    "[[" ~ space? ~ ^"date" ~ space_any ~ integer ~ date_arg? ~ space_any? ~ "]]"
}
date_arg = @{ space_any ~ ^"format" ~ space_any? ~ "=" ~ space_any? ~ string }

equation_ref = {
    "[[" ~ space? ~ (^"eref" | ^"equationref") ~ space_any ~ ident ~ space_any? ~ "]]"
}

file_ref = {
    "[[" ~ space? ~ link_newtab ~ space? ~ ^"file" ~ space_any ~ file_ident ~
    (space_any? ~ link_separator ~ (space_any? ~ file_name)?)? ~ space_any? ~ "]]"
}
file_name = { (!"]]" ~ ANY)+ }

footnote = {
    "[[" ~ space? ~ ^"footnote" ~ space_any? ~ "]]" ~
    lines_internal ~
    "[[/" ~ space? ~ ^"footnote" ~ space_any? ~ "]]"
}

footnote_block = { "[[" ~ space? ~ ^"footnoteblock" ~ space_any? ~ "]]" }

form = {
    "[[" ~ space? ~ ^"form" ~ space_any? ~ "]]\n" ~
    (!("[[/" ~ space? ~ ^"form") ~ ANY)* ~
    "[[/" ~ space? ~ ^"form" ~ space_any? ~ "]]"
}

gallery = { "[[" ~ space? ~ ^"gallery" ~ space_any? ~ "]]" }

module = {
    "[[" ~ space? ~ ^"module" ~ space_any ~ ident ~ module_arg* ~ space_any? ~ "]]" ~
    (
        "\n" ~ (!("[[/" ~ space? ~ ^"module") ~ ANY)* ~
        "[[/" ~ space? ~ ^"module" ~ space_any? ~ "]]"
    )?
}
module_arg = { space_any ~ ident ~ space_any? ~ "=" ~ space_any? ~ string }

note = {
    "[[" ~ space? ~ ^"note" ~ space_any? ~ "]]\n" ~
    line* ~
    "[[/" ~ space? ~ ^"note" ~ space_any? ~ "]]"
}

image = {
    "[[" ~ space? ~ image_alignment? ~ space? ~
    ^"image" ~ space_any ~ file_ident ~
    image_arg* ~ space_any? ~ "]]"
}
image_alignment = {
    space_any? ~ ("f"? ~ ("<" | ">") | "=")?
}
image_arg = {
    space_any ~
    (^"link" | ^"alt" | ^"title" | ^"width" | ^"height" | ^"style" | ^"class" | ^"size") ~
    space_any? ~ "=" ~ space_any? ~ string
}

size = {
    "[[" ~ space? ~ ^"size" ~ space_any ~ size_arg ~ space_any? ~ "]]" ~
    lines_internal ~
    "[[/" ~ space? ~ ^"size" ~ space_any? ~ "]]"
}
size_arg = {
    (ASCII_DIGIT | "."){1,5} ~ space? ~ (^"rem" | ^"em" | ^"px" | "%") |
    ^"xx-small" |
    ^"x-small" |
    ^"smaller" |
    ^"larger" |
    ^"small" |
    ^"medium" |
    ^"large" |
    ^"x-large" |
    ^"xx-large"
}

span = {
    "[[" ~ space? ~ ^"span" ~ span_arg* ~ space_any? ~ "]]" ~
    lines_internal ~
    "[[/" ~ space? ~ ^"span" ~ space_any? ~ "]]"
}
span_arg = { space_any ~ (^"id" | ^"class" | ^"style") ~ space_any? ~ "=" ~ space_any? ~ string }

tab_list = {
    "[[" ~ space? ~ (^"tablist" | ^"tabview" | ^"tabs") ~ space_any? ~ "]]" ~ space_any? ~
    (tab ~ space_any?)* ~
    "[[/" ~ space? ~ (^"tablist" | ^"tabview" | ^"tabs") ~ space_any? ~ "]]"
}
tab = {
    "[[" ~ space? ~ ^"tab" ~ space_any ~ tab_name ~ space_any? ~ "]]" ~ space_any? ~
    lines_internal ~
    "[[/" ~ space? ~ ^"tab" ~ space_any? ~ "]]"
}
tab_name = { (!("]]" | "\n") ~ ANY)+ }

user = { "[[" ~ space? ~ "*"? ~ space? ~ ^"user" ~ space ~ ident ~ space? ~ "]]" }
// }}}

// Link words {{{
anchor_tag = {
    "[[" ~ space? ~ ^"a" ~ "_"? ~ anchor_arg* ~ space_any? ~ "]]" ~
    word* ~
    "[[/" ~ space? ~ ^"a" ~ "_"? ~ space_any? ~ "]]"
}
anchor_arg = {
    space ~ (^"href" | ^"name" | ^"id" | ^"class" | ^"style" | ^"target") ~ space? ~
    "=" ~ space? ~ string
}

link_bare = { link_newtab ~ url }

link_page = {
    "[[[" ~ space_any? ~ link_newtab ~ space_any? ~ link_page_href ~
    (space_any? ~ link_separator ~ (space_any? ~ link_page_name)?)? ~ space_any? ~ "]]]"
}
link_separator = { "|" }
link_page_href = { (!("\n" | "|" | "]]]") ~ ANY)+ }
link_page_name = { (!("\n" | "[" | "]]]") ~ ANY)+ }

link_url = {
    "[" ~ !"[" ~ space? ~ link_newtab ~ space? ~
     link_url_href ~ space ~
     link_url_name ~ space? ~ "]"
}
link_url_href = { ^"mailto:"? ~ email | root_url | url }
link_url_name = { (!("\n" | "[" | "]") ~ ANY)+ }

link_newtab = { "*"? }
// }}}

// Misc words {{{
text = {
    (!(
        "@@" |
        "``" |
        "//" |
        "--" |
        "**" |
        "__" |
        ",," |
        "^^" |
        "{{" | "}}" |
        "[[" | "]]" |
        "[[[" | "]]]" |
        "##" |
        "-"{4,} | "~"{4,} |
        "\n" |
        url |
        link_url
    ) ~ ANY)+
}

raw = { ("@@@@@@" | "@@" ~ (!("@@" | "\n") ~ ANY)* ~ "@@") }
legacy_raw = { ("``````" | "``" ~ (!("``" | "\n") ~ ANY)* ~ "``") }
// }}}

// Components {{{
hex_digit = @{ '0'..'9' | 'a'..'f' | 'A'..'F' }
space = _{ (" " | "\r" | "\t")+ }
space_any = _{ (" " | "\r" | "\t" | "\n")+ }
integer = @{ "-"? ~ ASCII_DIGIT+ }
file_ident = @{ (!(space | "]]") ~ ANY)+ }
ident = @{ (ASCII_ALPHANUMERIC | "-" | "+" | "_" | "." | "%")+ }
str_inner = @{ (!("\"" | "\\") ~ ANY)* ~ (escape ~ str_inner)? }
string = @{ "\"" ~ str_inner ~ "\"" }
escape = @{ "\\" ~ ("\"" | "\\" | "r" | "n" | "t" | "0" | "'") }
root_url = @{ "/" ~ (!(" " | "\n" | "|" | "]") ~ ANY)+ }
url = @{ (^"http" ~ ^"s"? | ^"ftp") ~ "://" ~ (!(" " | "\n" | "|" | "]") ~ ANY)+ }
email = @{
    (ASCII_ALPHANUMERIC | "-" | "+" | "_" | ".")+ ~ "@" ~
    (ASCII_ALPHANUMERIC | "-")+ ~ "." ~
    (ASCII_ALPHANUMERIC | ".")+
}
// }}}

// vim: set fdm=marker foldlevel=0:
